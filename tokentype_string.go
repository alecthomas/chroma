// Code generated by "stringer -type TokenType"; DO NOT EDIT.

package chroma

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Background - -1]
	_ = x[PreWrapper - -2]
	_ = x[Line - -3]
	_ = x[LineNumbers - -4]
	_ = x[LineNumbersTable - -5]
	_ = x[LineHighlight - -6]
	_ = x[LineTable - -7]
	_ = x[LineTableTD - -8]
	_ = x[LineLink - -9]
	_ = x[CodeLine - -10]
	_ = x[Error - -11]
	_ = x[Other - -12]
	_ = x[None - -13]
	_ = x[EOFType-0]
	_ = x[Keyword-1000]
	_ = x[KeywordConstant-1001]
	_ = x[KeywordDeclaration-1002]
	_ = x[KeywordNamespace-1003]
	_ = x[KeywordPseudo-1004]
	_ = x[KeywordReserved-1005]
	_ = x[KeywordType-1006]
	_ = x[Name-2000]
	_ = x[NameAttribute-2001]
	_ = x[NameBuiltin-2002]
	_ = x[NameBuiltinPseudo-2003]
	_ = x[NameClass-2004]
	_ = x[NameConstant-2005]
	_ = x[NameDecorator-2006]
	_ = x[NameEntity-2007]
	_ = x[NameException-2008]
	_ = x[NameFunction-2009]
	_ = x[NameFunctionMagic-2010]
	_ = x[NameKeyword-2011]
	_ = x[NameLabel-2012]
	_ = x[NameNamespace-2013]
	_ = x[NameOperator-2014]
	_ = x[NameOther-2015]
	_ = x[NamePseudo-2016]
	_ = x[NameProperty-2017]
	_ = x[NameTag-2018]
	_ = x[NameVariable-2019]
	_ = x[NameVariableAnonymous-2020]
	_ = x[NameVariableClass-2021]
	_ = x[NameVariableGlobal-2022]
	_ = x[NameVariableInstance-2023]
	_ = x[NameVariableMagic-2024]
	_ = x[Literal-3000]
	_ = x[LiteralDate-3001]
	_ = x[LiteralOther-3002]
	_ = x[LiteralString-3100]
	_ = x[LiteralStringAffix-3101]
	_ = x[LiteralStringAtom-3102]
	_ = x[LiteralStringBacktick-3103]
	_ = x[LiteralStringBoolean-3104]
	_ = x[LiteralStringChar-3105]
	_ = x[LiteralStringDelimiter-3106]
	_ = x[LiteralStringDoc-3107]
	_ = x[LiteralStringDouble-3108]
	_ = x[LiteralStringEscape-3109]
	_ = x[LiteralStringHeredoc-3110]
	_ = x[LiteralStringInterpol-3111]
	_ = x[LiteralStringName-3112]
	_ = x[LiteralStringOther-3113]
	_ = x[LiteralStringRegex-3114]
	_ = x[LiteralStringSingle-3115]
	_ = x[LiteralStringSymbol-3116]
	_ = x[LiteralNumber-3200]
	_ = x[LiteralNumberBin-3201]
	_ = x[LiteralNumberFloat-3202]
	_ = x[LiteralNumberHex-3203]
	_ = x[LiteralNumberInteger-3204]
	_ = x[LiteralNumberIntegerLong-3205]
	_ = x[LiteralNumberOct-3206]
	_ = x[Operator-4000]
	_ = x[OperatorWord-4001]
	_ = x[Punctuation-5000]
	_ = x[Comment-6000]
	_ = x[CommentHashbang-6001]
	_ = x[CommentMultiline-6002]
	_ = x[CommentSingle-6003]
	_ = x[CommentSpecial-6004]
	_ = x[CommentPreproc-6100]
	_ = x[CommentPreprocFile-6101]
	_ = x[Generic-7000]
	_ = x[GenericDeleted-7001]
	_ = x[GenericEmph-7002]
	_ = x[GenericError-7003]
	_ = x[GenericHeading-7004]
	_ = x[GenericInserted-7005]
	_ = x[GenericOutput-7006]
	_ = x[GenericPrompt-7007]
	_ = x[GenericStrong-7008]
	_ = x[GenericSubheading-7009]
	_ = x[GenericTraceback-7010]
	_ = x[GenericUnderline-7011]
	_ = x[Text-8000]
	_ = x[TextWhitespace-8001]
	_ = x[TextSymbol-8002]
	_ = x[TextPunctuation-8003]
}

const _TokenType_name = "NoneOtherErrorCodeLineLineLinksLineTableTDLineTableLineHighlightLineNumbersTableLineNumbersLinePreWrapperBackgroundEOFTypeKeywordKeywordConstantKeywordDeclarationKeywordNamespaceKeywordPseudoKeywordReservedKeywordTypeNameNameAttributeNameBuiltinNameBuiltinPseudoNameClassNameConstantNameDecoratorNameEntityNameExceptionNameFunctionNameFunctionMagicNameKeywordNameLabelNameNamespaceNameOperatorNameOtherNamePseudoNamePropertyNameTagNameVariableNameVariableAnonymousNameVariableClassNameVariableGlobalNameVariableInstanceNameVariableMagicLiteralLiteralDateLiteralOtherLiteralStringLiteralStringAffixLiteralStringAtomLiteralStringBacktickLiteralStringBooleanLiteralStringCharLiteralStringDelimiterLiteralStringDocLiteralStringDoubleLiteralStringEscapeLiteralStringHeredocLiteralStringInterpolLiteralStringNameLiteralStringOtherLiteralStringRegexLiteralStringSingleLiteralStringSymbolLiteralNumberLiteralNumberBinLiteralNumberFloatLiteralNumberHexLiteralNumberIntegerLiteralNumberIntegerLongLiteralNumberOctOperatorOperatorWordPunctuationCommentCommentHashbangCommentMultilineCommentSingleCommentSpecialCommentPreprocCommentPreprocFileGenericGenericDeletedGenericEmphGenericErrorGenericHeadingGenericInsertedGenericOutputGenericPromptGenericStrongGenericSubheadingGenericTracebackGenericUnderlineTextTextWhitespaceTextSymbolTextPunctuation"

var _TokenType_map = map[TokenType]string{
	-13:  _TokenType_name[0:4],
	-12:  _TokenType_name[4:9],
	-11:  _TokenType_name[9:14],
	-10:  _TokenType_name[14:22],
	-9:   _TokenType_name[22:31],
	-8:   _TokenType_name[31:42],
	-7:   _TokenType_name[42:51],
	-6:   _TokenType_name[51:64],
	-5:   _TokenType_name[64:80],
	-4:   _TokenType_name[80:91],
	-3:   _TokenType_name[91:95],
	-2:   _TokenType_name[95:105],
	-1:   _TokenType_name[105:115],
	0:    _TokenType_name[115:122],
	1000: _TokenType_name[122:129],
	1001: _TokenType_name[129:144],
	1002: _TokenType_name[144:162],
	1003: _TokenType_name[162:178],
	1004: _TokenType_name[178:191],
	1005: _TokenType_name[191:206],
	1006: _TokenType_name[206:217],
	2000: _TokenType_name[217:221],
	2001: _TokenType_name[221:234],
	2002: _TokenType_name[234:245],
	2003: _TokenType_name[245:262],
	2004: _TokenType_name[262:271],
	2005: _TokenType_name[271:283],
	2006: _TokenType_name[283:296],
	2007: _TokenType_name[296:306],
	2008: _TokenType_name[306:319],
	2009: _TokenType_name[319:331],
	2010: _TokenType_name[331:348],
	2011: _TokenType_name[348:359],
	2012: _TokenType_name[359:368],
	2013: _TokenType_name[368:381],
	2014: _TokenType_name[381:393],
	2015: _TokenType_name[393:402],
	2016: _TokenType_name[402:412],
	2017: _TokenType_name[412:424],
	2018: _TokenType_name[424:431],
	2019: _TokenType_name[431:443],
	2020: _TokenType_name[443:464],
	2021: _TokenType_name[464:481],
	2022: _TokenType_name[481:499],
	2023: _TokenType_name[499:519],
	2024: _TokenType_name[519:536],
	3000: _TokenType_name[536:543],
	3001: _TokenType_name[543:554],
	3002: _TokenType_name[554:566],
	3100: _TokenType_name[566:579],
	3101: _TokenType_name[579:597],
	3102: _TokenType_name[597:614],
	3103: _TokenType_name[614:635],
	3104: _TokenType_name[635:655],
	3105: _TokenType_name[655:672],
	3106: _TokenType_name[672:694],
	3107: _TokenType_name[694:710],
	3108: _TokenType_name[710:729],
	3109: _TokenType_name[729:748],
	3110: _TokenType_name[748:768],
	3111: _TokenType_name[768:789],
	3112: _TokenType_name[789:806],
	3113: _TokenType_name[806:824],
	3114: _TokenType_name[824:842],
	3115: _TokenType_name[842:861],
	3116: _TokenType_name[861:880],
	3200: _TokenType_name[880:893],
	3201: _TokenType_name[893:909],
	3202: _TokenType_name[909:927],
	3203: _TokenType_name[927:943],
	3204: _TokenType_name[943:963],
	3205: _TokenType_name[963:987],
	3206: _TokenType_name[987:1003],
	4000: _TokenType_name[1003:1011],
	4001: _TokenType_name[1011:1023],
	5000: _TokenType_name[1023:1034],
	6000: _TokenType_name[1034:1041],
	6001: _TokenType_name[1041:1056],
	6002: _TokenType_name[1056:1072],
	6003: _TokenType_name[1072:1085],
	6004: _TokenType_name[1085:1099],
	6100: _TokenType_name[1099:1113],
	6101: _TokenType_name[1113:1131],
	7000: _TokenType_name[1131:1138],
	7001: _TokenType_name[1138:1152],
	7002: _TokenType_name[1152:1163],
	7003: _TokenType_name[1163:1175],
	7004: _TokenType_name[1175:1189],
	7005: _TokenType_name[1189:1204],
	7006: _TokenType_name[1204:1217],
	7007: _TokenType_name[1217:1230],
	7008: _TokenType_name[1230:1243],
	7009: _TokenType_name[1243:1260],
	7010: _TokenType_name[1260:1276],
	7011: _TokenType_name[1276:1292],
	8000: _TokenType_name[1292:1296],
	8001: _TokenType_name[1296:1310],
	8002: _TokenType_name[1310:1320],
	8003: _TokenType_name[1320:1335],
}

func (i TokenType) String() string {
	if str, ok := _TokenType_map[i]; ok {
		return str
	}
	return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
}
