[
  {"type":"Text","value":"---"},
  {"type":"TextWhitespace","value":"  "},
  {"type":"Comment","value":"# document start"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Comments in YAML look like this."},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"################"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# SCALAR TYPES #"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"################"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Our root object (which continues for the entire document) will be a map,"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# which is equivalent to a dictionary, hash or object in other languages."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"key"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"value"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"another_key"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"Another"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"value"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"goes"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"here."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"a_number_value"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"100"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"scientific_notation"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"1e+12"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# The number 1 will be interpreted as a number, not a boolean. if you want"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# it to be interpreted as a boolean, use true"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"boolean"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"KeywordConstant","value":"true"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"null_value"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"KeywordConstant","value":"null"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"key with spaces"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"value"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# Notice that strings don't need to be quoted. However, they can be."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"however"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringSingle","value":"'A string, enclosed in quotes.'"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"'Keys can be quoted too.'"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringDouble","value":"\"Useful if you want to put a ':' in your key.\""},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"single quotes"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringSingle","value":"'have ''one'' escape pattern'"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"double quotes"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringDouble","value":"\"have many: \\\", \\0, \\t, \\u263A, \\x0d\\x0a == \\r\\n, and more.\""},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# UTF-8/16/32 characters need to be encoded"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"Superscript two"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"\\u00B2"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Multiple-line strings can be written either as a 'literal block' (using |),"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# or a 'folded block' (using '\u003e')."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"literal_block"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringDoc","value":"|\n    This entire block of text will be the value of the 'literal_block' key,"},
  {"type":"TextWhitespace","value":"\n    "},
  {"type":"Text","value":"with"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"line"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"breaks"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"being"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"preserved."},
  {"type":"TextWhitespace","value":"\n\n    "},
  {"type":"Text","value":"The"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"literal"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"continues"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"until"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"de-dented"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"and"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"the"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"leading"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"indentation"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"is"},
  {"type":"TextWhitespace","value":"\n    "},
  {"type":"Text","value":"stripped."},
  {"type":"TextWhitespace","value":"\n\n        "},
  {"type":"Text","value":"Any"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"lines"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"that"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"are"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringSingle","value":"'more-indented'"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"keep"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"the"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"rest"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"of"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"their"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"indentation"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringDoc","value":"-\n        these lines will be indented by 4 spaces."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"folded_style"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringDoc","value":"\u003e\n    This entire block of text will be the value of 'folded_style', but this"},
  {"type":"TextWhitespace","value":"\n    "},
  {"type":"Text","value":"time"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"all"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"newlines"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"will"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"be"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"replaced"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"with"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"a"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"single"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"space."},
  {"type":"TextWhitespace","value":"\n\n    "},
  {"type":"Text","value":"Blank"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"lines"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"like"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"above"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"are"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"converted"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"to"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"a"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"newline"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"character."},
  {"type":"TextWhitespace","value":"\n\n        "},
  {"type":"LiteralStringSingle","value":"'More-indented'"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"lines"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"keep"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"their"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"newlines"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"too"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringDoc","value":"-\n        this text will appear over two lines."},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"####################"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# COLLECTION TYPES #"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"####################"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Nesting uses indentation. 2 space indent is preferred (but not required)."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"a_nested_map"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"key"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"value"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"another_key"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"Another"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"Value"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"another_nested_map"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":"\n    "},
  {"type":"Keyword","value":"hello"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"hello"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Maps don't have to have string keys."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"0.25"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"a"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"float"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"key"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Keys can also be complex, like multi-line objects"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# We use ? followed by a space to indicate the start of a complex key."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Punctuation","value":"?"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringDoc","value":"|\n  This is a key"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Text","value":"that"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"has"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"multiple"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"lines"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"and"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"this"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"is"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"its"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"value"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# YAML also allows mapping between sequences with the complex key syntax"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# Some language parsers might complain"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# An example"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Text","value":"? - Manchester"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"United"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Text","value":"- Real"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"Madrid"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Punctuation","value":"["},
  {"type":"LiteralDate","value":"2001-01-01"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralDate","value":"2002-02-02"},
  {"type":"Punctuation","value":"]"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Sequences (equivalent to lists or arrays) look like this"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# (note that the '-' counts as indentation):"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"a_sequence"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Text","value":"- Item"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"1"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Text","value":"- Item"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"2"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Text","value":"- "},
  {"type":"LiteralNumber","value":"0.5"},
  {"type":"TextWhitespace","value":"  "},
  {"type":"Comment","value":"# sequences can contain disparate types."},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Text","value":"- Item"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"4"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Text","value":"- "},
  {"type":"Keyword","value":"key"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"value"},
  {"type":"TextWhitespace","value":"\n    "},
  {"type":"Keyword","value":"another_key"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"another_value"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"LiteralStringDoc","value":"-\n    - This is a sequence"},
  {"type":"TextWhitespace","value":"\n    "},
  {"type":"Text","value":"- inside"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"another"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"sequence"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Text","value":"- - - Nested"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"sequence"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"indicators"},
  {"type":"TextWhitespace","value":"\n      "},
  {"type":"Text","value":"- can"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"be"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"collapsed"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Since YAML is a superset of JSON, you can also write JSON-style maps and"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# sequences:"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"json_map"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"{"},
  {"type":"Keyword","value":"\"key\": "},
  {"type":"LiteralStringDouble","value":"\"value\""},
  {"type":"Text","value":"}"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"json_seq"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Punctuation","value":"["},
  {"type":"LiteralNumber","value":"3"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"2"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"1"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringDouble","value":"\"takeoff\""},
  {"type":"Punctuation","value":"]"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"and quotes are optional"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"{"},
  {"type":"Keyword","value":"key"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Punctuation","value":"["},
  {"type":"LiteralNumber","value":"3"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"2"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"1"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"takeoff"},
  {"type":"Punctuation","value":"]"},
  {"type":"Text","value":"}"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"#######################"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# EXTRA YAML FEATURES #"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"#######################"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# YAML also has a handy feature called 'anchors', which let you easily duplicate"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# content across your document. Both of these keys will have the same value:"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"anchored_content"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"\u0026anchor_name"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"This"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"string"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"will"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"appear"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"as"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"the"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"value"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"of"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"two"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"keys."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"other_anchor"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"*anchor_name"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Anchors can be used to duplicate/inherit properties"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"base"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"\u0026base"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"name"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"Everyone"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"has"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"same"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"name"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# The regexp \u003c\u003c is called Merge Key Language-Independent Type. It is used to"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# indicate that all the keys of one or more specified maps should be inserted"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# into the current map."},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Keyword","value":"foo"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"\u0026foo"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"\u003c\u003c"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"*base"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"age"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"10"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Keyword","value":"bar"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"\u0026bar"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"\u003c\u003c"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"*base"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"age"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"20"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# foo and bar would also have name: Everyone has same name"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# YAML also has tags, which you can use to explicitly declare types."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"explicit_string"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"!!str"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"0.5"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# Some parsers implement language specific tags, like this one for Python's"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# complex number type."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"python_complex_number"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"!!python/complex"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"1"},
  {"type":"Text","value":"+2j"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# We can also use yaml complex keys with language specific tags"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Punctuation","value":"?"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"!!python/tuple"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Punctuation","value":"["},
  {"type":"LiteralNumber","value":"5"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralNumber","value":"7"},
  {"type":"Punctuation","value":"]"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"Fifty"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"Seven"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# Would be {(5, 7): 'Fifty Seven'} in Python"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"####################"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# EXTRA YAML TYPES #"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"####################"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Strings and numbers aren't the only scalars that YAML can understand."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# ISO-formatted date and datetime literals are also parsed."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"datetime"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralDate","value":"2001-12-15T02:59:43.1Z"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"datetime_with_spaces"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralDate","value":"2001-12-14 21:59:43.10 -5"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"date"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralDate","value":"2002-12-14"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# The !!binary tag indicates that a string is actually a base64-encoded"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Comment","value":"# representation of a binary blob."},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"gif_file"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"CommentPreproc","value":"!!binary"},
  {"type":"TextWhitespace","value":" "},
  {"type":"LiteralStringDoc","value":"|\n  R0lGODlhDAAMAIQAAP//9/X17unp5WZmZgAAAOfn515eXvPz7Y6OjuDg4J+fn5"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Text","value":"OTk6enp56enmlpaWNjY6Ojo4SEhP/++f/++f/++f/++f/++f/++f/++f/++f/"},
  {"type":"LiteralStringDoc","value":"+\n  +f/++f/++f/++f/++f/++SH+Dk1hZGUgd2l0aCBHSU1QACwAAAAADAAMAAAFLC"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Text","value":"AgjoEwnuNAFOhpEMTRiggcz4BNJHrv/zCFcLiwMWYNG84BwwEeECcgggoBADs="},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# YAML also has a set type, which looks like this:"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"set"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Punctuation","value":"?"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"item1"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Punctuation","value":"?"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"item2"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Punctuation","value":"?"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"item3"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"or"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"{item1"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"item2"},
  {"type":"Punctuation","value":","},
  {"type":"TextWhitespace","value":" "},
  {"type":"Text","value":"item3}"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Comment","value":"# Sets are just maps with null values; the above is equivalent to:"},
  {"type":"TextWhitespace","value":"\n"},
  {"type":"Keyword","value":"set2"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"item1"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"KeywordConstant","value":"null"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"item2"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"KeywordConstant","value":"null"},
  {"type":"TextWhitespace","value":"\n  "},
  {"type":"Keyword","value":"item3"},
  {"type":"Punctuation","value":":"},
  {"type":"TextWhitespace","value":" "},
  {"type":"KeywordConstant","value":"null"},
  {"type":"TextWhitespace","value":"\n\n"},
  {"type":"Text","value":"..."},
  {"type":"TextWhitespace","value":"  "},
  {"type":"Comment","value":"# document end"},
  {"type":"TextWhitespace","value":"\n"}
]
