<lexer>
    <config>
    <name>Pascal</name>
    <alias>pascal</alias>
    <alias>pas</alias>
    <filename>*.pas</filename>
    <filename>*.lpi</filename>
    <filename>*.lpr</filename>
    <mime_type>text/pascal</mime_type>
    <mime_type>application/pascal</mime_type>
  </config>
  <rules>
    <state name="root">
      <rule pattern="{[\s\S]*?\}|\/\/.*/">
        <token type="CommentMultiline"/>
      </rule>
      <rule pattern="\(\.|\.\)|[()\[\]:;,.]">
        <token type="Punctuation"/>
      </rule>
      <rule pattern="(uses)(\s+)([a-zA-Z0-9]*)">
        <bygroups>
          <token type="Keyword"/>
          <token type="Text"/>
          <token type="NameNamespace"/>
        </bygroups>
      </rule>
      <rule pattern="(var)(\s+)([a-zA-Z0-9]*)(\s+)(:)(\s+)([a-zA-Z0-9]*)">
        <bygroups>
          <token type="Keyword"/>
          <token type="Text"/>
          <token type="NameVariable"/>
          <token type="Text"/>
          <token type="Punctuation"/>
          <token type="Text"/>
          <token type="KeywordType"/>
        </bygroups>
      </rule>
      <rule pattern="(absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\b">
        <token type="Keyword"/>
      </rule>
      <rule pattern="(dispose|exit|false|new|true)\b">
        <token type="Keyword"/>
      </rule>
      <rule pattern="(?:[&amp;%]\d+|\$[a-f\d]+)/i">
        <token type="LiteralNumberHex"/>
      </rule>
      <rule pattern="\.\.|\*\*|:=|&lt;[&lt;=>]?|>[>=]?|[+\-*\/]=?|[@^=]">
        <token type="Operator"/>
      </rule>
      <rule pattern="\n">
        <token type="Text"/>
      </rule>
      <rule pattern="\s+">
        <token type="Text"/>
      </rule>
      <rule pattern="(?:'(?:''|[^'\r\n])*'(?!')|#[&amp;$%]?[a-f\d]+)+|\^[a-z]">
        <token type="LiteralString"/>
      </rule>
    </state>
  </rules>
</lexer>
