[
  {"type":"GenericHeading","value":"# about\r\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"GenericSubheading","value":"## user defined function in cql\r\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"```javascript\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  column.substring(0,num) \r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"```\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"```cql\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"CREATE FUNCTION IF NOT EXISTS cycling.left (column TEXT,num int)\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"RETURNS NULL ON NULL INPUT\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"RETURNS text\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"LANGUAGE javascript AS $$ \r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  column.substring(0,num) \r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"$$;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"CREATE OR REPLACE FUNCTION cycling.fLog (input double)\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"CALLED ON NULL INPUT\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"RETURNS double LANGUAGE java AS\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"'return Double.valueOf(Math.log(input.doubleValue()));';\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"```\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"```postgres\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"DROP TABLE IF EXISTS emp CASCADE;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"CREATE TABLE emp (\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  empname text,\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  salary integer,\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  last_date timestamp,\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  last_user text\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":");\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"select \r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  $my_tag$aoeuaoeu$my_tag$ as blah\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":";\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"CREATE OR REPLACE FUNCTION emp_stamp() RETURNS trigger AS $emp_stamp$\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"BEGIN\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  -- Check that empname and salary are given\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  IF NEW.empname IS NULL THEN\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"    RAISE EXCEPTION 'empname cannot be null';\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  END IF;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  IF NEW.salary IS NULL THEN\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"    RAISE EXCEPTION '% cannot have null salary', NEW.empname;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  END IF;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  -- Who works for us when she must pay for it?\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  IF NEW.salary \u003c 0 THEN\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"    RAISE EXCEPTION '% cannot have a negative salary', NEW.empname;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  END IF;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  -- Remember who changed the payroll when\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  NEW.last_date := current_timestamp;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  NEW.last_user := current_user;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  RETURN NEW;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"END;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"$emp_stamp$ LANGUAGE plpgsql;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"CREATE TRIGGER emp_stamp BEFORE INSERT OR UPDATE ON emp\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  FOR EACH ROW EXECUTE PROCEDURE emp_stamp();\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"DO language plpgsql $$\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"declare r record;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"begin\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  for r in select "},
  {"type":"Keyword","value":"*"},
  {"type":"Text","value":" from books\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"loop\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  execute 'select ''' || r.title || '''';\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"end loop;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"end\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"$$;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"DO $$\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"declare r record;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"begin\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  for r in select "},
  {"type":"Keyword","value":"*"},
  {"type":"Text","value":" from books\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"loop\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"  execute 'select ''' || r.title || '''';\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"end loop;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"end\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"$$;\r"},
  {"type":"Error","value":"\n"},
  {"type":"Text","value":"```\r"},
  {"type":"Error","value":"\n"}
]
